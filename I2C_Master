/*
 * TWI_Micro_Device1.c
 *
 * Created: 02-03-2015 16:39:50
 *  Author: Rahul kumar
 */ 


#include <avr/io.h>
#include <util/delay.h>
#include <stdio.h>
#include <math.h>

#define F_CPU 16000000

unsigned char Slave_uC_address=0x20;
int write=0,read=1;

void Timer_init()
{
	TCCR1A|=(0<<WGM10)|(1<<WGM11)|(1<<COM1A1)|(1<<COM1B1);
	TCCR1B|=(1<<CS10)|(1<<CS11)|(1<<WGM12)|(1<<WGM13);   // Prescalar=64
}

void ADC_init(void)
{
	ADCSRA|=(1<<ADEN)|(1<<ADPS2) |(1<<ADPS1) |(1<<ADPS0);
}

void USART_init()
{
	UCSRB|=(1<<RXEN)|(0<<TXEN)	;
	UCSRC|=(1<<UMSEL)|(1<<USBS)|(1<<UCSZ0)|(1<<UCSZ1)  ;
	
}

void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSRA & (1<<UDRE)) );
	/* Put data into buffer, sends the data */
	UDR = data;
}

unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSRA & (1<<RXC)) ) ; // w8 Until (RXC flag == 0) , when  it is equal to 0, buffer has unread data.
	
	/* Get and return received data from buffer ,i.e-read the data*/
	return UDR;
}

void TWI_init_master(void) // Function to initialize master, Setting up SCL.
{
	TWBR=0x01; // Bit rate
	TWSR|=(0<<TWPS1)|(0<<TWPS0); // Setting prescalar bits
	// Therefore SCL=2 MHz (Formula)
}

void TWI_init_Slave()
{
	TWAR=Slave_uC_address;	// Give Unique Slave add to the uC
}


void TWI_Slave_write(unsigned char Data) // Function to write data
{
	TWDR= Data;           // Fill TWDR register whith the data to be sent
	TWCR= (1<<TWEN)|(1<<TWINT);   // Enable TWI, Clear TWI interrupt flag
	while((TWSR & 0xF8) != 0xC0); // Wait for the acknowledgement
}


void TWI_Slave_read()
{    unsigned char data;
	// Clear TWI interrupt flag,Get acknowlegement, Enable TWI
	TWCR= (1<<TWINT)|(1<<TWEA)|(1<<TWEN);
	while (!(TWCR & (1<<TWINT))); // Wait for TWINT flag
	while((TWSR & 0xF8)!=0x80); // Wait for acknowledgement
	data=TWDR; // Get value from TWDR
	PORTB=data; // send the receive value on PORTB
}

void TWI_match_write_slave(void) //Function to match the slave address and slave dirction bit(write)
{
	while((TWSR & 0xF8)!= 0xA8) // Loop till correct acknoledgement have been received
	{
		// Get acknowlegement, Enable TWI, Clear TWI interrupt flag
		TWCR=(1<<TWEA)|(1<<TWEN)|(1<<TWINT);
		while (!(TWCR & (1<<TWINT)));  // Wait for TWINT flag
	}
}

void TWI_match_read_slave(void) //Function to match the slave address and slave dirction bit(read)
{
	while((TWSR & 0xF8)!= 0x60)  // Loop till correct acknoledgement have been received
	{
		// Get acknowlegement, Enable TWI, Clear TWI interrupt flag
		TWCR=(1<<TWEA)|(1<<TWEN)|(1<<TWINT);
		while (!(TWCR & (1<<TWINT)));  // Wait for TWINT flag
	}
}


void TWI_Start() //Sending start condition
{
	TWCR|=(1<<TWEN)|(1<<TWSTA)|(1<<TWINT); //Enable the device, set it to master, Start communication.
	
	while(!(TWCR & (1<<TWINT))); // Wait till start condition is transmitted
	while((TWSR & 0xF8)!= 0x08); // Check for the acknowledgement at start condition.(is TWSR == 01000---  )
}

void TWI_Master_write_address(unsigned char add)
{
	TWDR=add; // Address and write instruction
	TWCR|=(1<<TWINT)|(1<<TWEN);    // Clear TWI interrupt flag,Enable TWI
	while (!(TWCR & (1<<TWINT))); // Wait till complete TWDR byte transmitted
	while((TWSR & 0xF8)!= 0x18);  // Check for the SLAVE add+W has been transmitted ACK has been received.
}

void TWI_Master_read_address(unsigned char Slave_Address)
{
	TWDR=Slave_Address; // Address and write instruction
	TWCR=(1<<TWINT)|(1<<TWEN);    // Clear TWI interrupt flag,Enable TWI
	while (!(TWCR & (1<<TWINT))); // Wait till complete TWDR byte transmitted
	while((TWSR & 0xF8)!= 0x40);  // Check for the SLAVE add+R has been transmitted ACK has been received.
}

void TWI_Master_read_data()
{   
	TWCR=(1<<TWINT)|(1<<TWEN);    // Clear TWI interrupt flag,Enable TWI
	while (!(TWCR & (1<<TWINT))); // Wait till complete TWDR byte transmitted
	while((TWSR & 0xF8) != 0x58); // Check for the acknoledgement
	data=TWDR;
	PORTB=data;  // Lighting the LED in Binary code.
}

void TWI_Master_write_data(unsigned char Data)
{   TWDR=Data;
	TWCR=(1<<TWINT)|(1<<TWEN);    // Clear TWI interrupt flag,Enable TWI
	while (!(TWCR & (1<<TWINT))); // Wait till complete TWDR byte transmitted
	while((TWSR & 0xF8) != 0x28); // Check for the acknoledgement
}

void TWI_Stop()
{
	TWCR=(1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
	while (!(TWCR & (1<<TWSTO))); // Wait till complete TWDR byte transmitted
}


int main(void)
{
	 //_delay_ms(1000);
	TWI_init_master();
   
	unsigned char i=10;
	
    while(1)
    {  if(i>255)
		i=10;
		
		   TWI_Start();
	       TWI_Master_write_address(Slave_uC_address);
		   TWI_Master_write_data(i);  
		   TWI_Stop();
		   
		  _delay_ms(100); 
		  /* 
		   TWI_Start();
		   TWI_Master_read_address(a+read); // Function to write address and data direction bit(read) on SDA
		   TWI_Master_read_data(); // Function to read data from slave
		   TWI_Stop();
		  */ 
	    i++;		   
	}
}
